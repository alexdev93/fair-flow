services:

  service-discovery:
    build:
      context: ./Service Discovery
      dockerfile: Dockerfile
    ports:
      - 8761:8761
    networks:
      - fairflow_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761" ]
      interval: 30s
      timeout: 10s
      retries: 3

  auth-service:
    build:
      context: ./Authentication
      dockerfile: Dockerfile
    ports:
      - target: 0
        published: 0
    networks:
      - fairflow_network
    depends_on:
      service-discovery:
        condition: service_healthy

  agent-service:
    build:
      context: ./Agent Service
      dockerfile: Dockerfile
    ports:
      - target: 0
        published: 0
    networks:
      - fairflow_network
    depends_on:
      service-discovery:
        condition: service_healthy

  fairflow-app:
    build:
      context: ./Fairflow-App
      dockerfile: Dockerfile
    ports:
      - target: 0
        published: 0
    networks:
      - fairflow_network
    depends_on:
      service-discovery:
        condition: service_healthy

  user-service:
    build:
      context: ./User-Service
      dockerfile: Dockerfile
    ports:
      - target: 0
        published: 0
    networks:
      - fairflow_network
    depends_on:
      service-discovery:
        condition: service_healthy

  api-gateway:
    build:
      context: ./Api Gateway
      dockerfile: Dockerfile
    ports:
      - 8181:8181
    networks:
      - fairflow_network
    depends_on:
      service-discovery:
        condition: service_healthy

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: pdb
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fairflow_network

  postgres-app:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_USER: admin
      POSTGRES_DB: fairflow
    ports:
      - 5433:5433
    volumes:
      - app_data:/var/lib/postgresql/data_app
    networks:
      - fairflow_network

  keycloak:
    image: quay.io/keycloak/keycloak:20.0
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/pdb
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
    ports:
      - 8080:8080
    command:
      - start-dev
    volumes:
      - ./docker-data/keycloak_data:/opt/jboss/keycloak/standalone/data
    networks:
      - fairflow_network

volumes:
  postgres_data:
  app_data:

networks:
  fairflow_network:
